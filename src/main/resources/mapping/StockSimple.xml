<?xml version="1.0" encoding="UTF-8"?>
<!-- 不写会报错 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mhy.crawl.dao.StockSimpleDao">

    <!-- 自定义返回结果集 -->
    <resultMap id="stockSimpleMap" type="com.mhy.crawl.data.model.StockSimple">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="symbol" column="symbol" javaType="java.lang.String"></result>
        <result property="name" column="name" javaType="java.lang.String"></result>
        <result property="volume" column="volume" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="open" column="open" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="high" column="high" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="close" column="close" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="low" column="low" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="chg" column="chg" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="percent" column="percent" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="turnrate" column="turnrate" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="ma5" column="ma5" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="ma10" column="ma10" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="ma30" column="ma30" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="dif" column="dif" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="dea" column="dea" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="macd" column="macd" javaType="java.lang.String" jdbcType="DOUBLE"></result>
        <result property="time" column="time" javaType="java.lang.String" jdbcType="DATE"></result>
    </resultMap>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，
    resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
         方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。
         oracle 不支持应该设置成 useGeneratedKeys="false" 不然会报错
    -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    <insert id="insert" parameterType="StockIdName">
        insert into stock_simple (
        id,
        symbol,
        name,
        open,
        high,
        close,
        low,
        chg,
        percent,
        turnrate,
        ma5,
        ma10,
        ma30,
        dif,
        dea,
        macd,
        time
        ) values (
        NULL,
        #{symbol ,jdbcType= DOUBLE },
        #{name ,jdbcType= DOUBLE },
        #{open ,jdbcType= DOUBLE },
        #{high ,jdbcType= DOUBLE },
        #{close ,jdbcType= DOUBLE },
        #{low ,jdbcType= DOUBLE },
        #{chg ,jdbcType= DOUBLE },
        #{percent ,jdbcType= DOUBLE },
        #{turnrate ,jdbcType= DOUBLE },
        #{ma5 ,jdbcType= DOUBLE },
        #{ma10 ,jdbcType= DOUBLE },
        #{ma30 ,jdbcType= DOUBLE },
        #{dif ,jdbcType= DOUBLE },
        #{dea ,jdbcType= DOUBLE },
        #{macd ,jdbcType= DOUBLE },
        #{time ,jdbcType= DATE }
        )
    </insert>

    <insert id="batchInsert" parameterType="List">
        insert into stock_simple (
        id,
        symbol,
        name,
        open,
        high,
        close,
        low,
        chg,
        percent,
        turnrate,
        ma5,
        ma10,
        ma30,
        dif,
        dea,
        macd,
        time)
        VALUES
        <foreach collection ="list" item="stockSimple" index= "index" separator =",">
            (
            #{stockSimple.symbol ,jdbcType= DOUBLE },
            #{stockSimple.name ,jdbcType= DOUBLE },
            #{stockSimple.open ,jdbcType= DOUBLE },
            #{stockSimple.high ,jdbcType= DOUBLE },
            #{stockSimple.close ,jdbcType= DOUBLE },
            #{stockSimple.low ,jdbcType= DOUBLE },
            #{stockSimple.chg ,jdbcType= DOUBLE },
            #{stockSimple.percent ,jdbcType= DOUBLE },
            #{stockSimple.turnrate ,jdbcType= DOUBLE },
            #{stockSimple.ma5 ,jdbcType= DOUBLE },
            #{stockSimple.ma10 ,jdbcType= DOUBLE },
            #{stockSimple.ma30 ,jdbcType= DOUBLE },
            #{stockSimple.dif ,jdbcType= DOUBLE },
            #{stockSimple.dea ,jdbcType= DOUBLE },
            #{stockSimple.macd ,jdbcType= DOUBLE },
            #{stockSimple.time ,jdbcType= DATE }
            )
        </foreach >
    </insert>

    <!--<update id="updateUser" >
        update t_user set username=#{username},password=#{password},account=#{account} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from t_user where id=#{id}
    </delete>

    <select id="selectUserById" parameterType="int" resultMap="userMap">
        select * from t_user where id=#{id}
    </select>

    <select id="selectAllUser" resultMap="userMap">
        select * from t_user
    </select>-->
</mapper>